<?xml version="1.0" ?>
<project name="Package Builder" basedir="." default="build" description="Phing build script for package.">

	<target name="get_build_number">
		<exec command="git describe" dir="${dir.root}" outputProperty="build.number"  />
		<property name='build.number' value="${build.number}"  override="true" />

	</target>

	<target name="config" description="Load configuration file">
	    <php expression="(PHP_OS == 'WINNT') ? 'win/' :'unix/'" returnProperty="IF_OS"/>

		<property file="${IF_OS}global.prop" override="true" />
		<phingcall target="get_build_number" />

		<property file="${IF_OS}project.prop" override="true" />
		<property file="${IF_OS}build.prop" override="true" />
	</target>

	
	<target name="build" description="build installable package only" depends="config">
		<exec command="git describe" dir="${dir.root}" outputProperty="build.number"  />

		<delete dir="${dir.packages}" includeemptydirs="true" />
		<delete dir="${dir.tmp}" includeemptydirs="true" />

		<mkdir dir="${dir.packages}" />

		<phingcall target="export_sourcecode" />
		<phingcall target="copy_default_plugin"/>
		<phingcall target="replace_tokens" />		

		<phing phingfile="${project.shortform.small}.xml" inheritAll="true" target="build" />

		<zip destfile="${dir.packages}/${file.package}.${build.version}.${build.number}.${file.extension}" 
			basedir="${dir.tmp}" />

		<!-- Copy framework from its defined location -->
		<phingcall target="copy_framework"/>
		<phingcall target="copy_processor"/>
		
		<delete dir="${dir.tmp}" includeemptydirs="true" />

		<copy file="${build.package.location}/pkg.xml" tofile="${dir.packages}/${build.package.name}.xml" overwrite="true"/>
		<copy file="${build.package.location}/script.php" tofile="${dir.packages}/script.php" overwrite="true"/>
		
		<!-- Apply the version change to all files. -->
		<reflexive>
			<fileset dir="${dir.packages}">
			     <include name="${build.package.name}.xml" />
			</fileset>
			 <filterchain>
				<replacetokens>
				    <token key="build.version" 			value="${build.version}" />
				    <token key="build.number"   		value="${build.number}" />
				    <token key="rbframework.name"   		value="${rbframework.name}" />
				    <token key="rbframework.build.version"   	value="${rbframework.build.version}" />
				    <token key="project.shortform"   		value="${project.shortform}" />				
				</replacetokens>
			</filterchain>
		</reflexive>	

		<zip destfile="${dir.packages}/${file.package}.${build.version}.${file.extension}" basedir="${dir.packages}">
			<fileset dir="${dir.packages}">
				<include name="**/*.*"></include>
			</fileset>
		</zip>

		<delete>
			<fileset dir="${dir.packages}">
				<include name="*.xml" />
			</fileset>
		</delete>	
	</target>

	<!-- Global Target -->
	<target name="export_sourcecode" description="Export files from a local repository to package folder">		

		<!-- Copy Source Code -->
		<copy todir="${dir.tmp}" >
		  <fileset dir="${dir.src}" />
		</copy>
		

	</target>

	<target name="copy_framework">
		<copy todir="${dir.packages}">
			<fileset dir="${rbframework.location}">
				<include name="${rbframework.name}.${rbframework.build.version}.${file.extension}" />				
			</fileset>
		</copy>
	</target>

	<target name="copy_processor">
		<mkdir dir="${dir.packages}/processor" />
		<copy file="${processor.location}/${processor.prefix}stripe.zip" tofile="${dir.packages}/processor/stripe.zip" overwrite="true"/>		
	</target>

	<target name="copy_default_plugin">
		<copy todir="${dir.tmp}/admin/install/extensions/plg_user_payinvoice">
			<fileset dir="${dir.root}/plugins/user/payinvoice">
				<include name="**/*.*" />
			</fileset>
		</copy>
	</target>

	<target name="replace_tokens">
		<!-- Apply the version change to all files. -->
		<reflexive>
			<fileset dir="${dir.tmp}">
			     <include name="**/*.*" />
			</fileset>
			 <filterchain>
				<replacetokens>
				    <token key="build.version" 	value="${build.version}" />
				    <token key="build.number"   value="${build.number}" />
				</replacetokens>
			</filterchain>
		</reflexive>	
	</target>
</project>
